apiVersion: v1
kind: ConfigMap
metadata:
  name: deployment-slo-queries
  namespace: default
  labels:
    app: sre-demo-app
    component: deployment-validation
data:
  # SLO queries for deployment validation
  slo-queries.yaml: |
    # Deployment Validation SLO Queries
    # These queries are used to validate deployments before marking them successful
    
    availability_slo:
      name: "Deployment Availability SLO"
      description: "Percentage of successful requests during deployment window"
      query: |
        (
          sum(rate(http_requests_total{status_code!~"5.."}[5m])) /
          sum(rate(http_requests_total[5m]))
        ) * 100
      threshold: 99.0
      comparison: "greater_than_or_equal"
      rationale: |
        During deployments, availability should remain above 99%.
        This is lower than production SLO to account for deployment transients.
    
    latency_slo:
      name: "Deployment Latency SLO"
      description: "95th percentile request latency during deployment"
      query: |
        histogram_quantile(0.95, 
          sum(rate(http_request_duration_seconds_bucket[5m])) by (le)
        )
      threshold: 0.8
      comparison: "less_than_or_equal"
      rationale: |
        P95 latency should stay below 800ms during deployments.
        Higher threshold than production to account for resource reallocation.
    
    error_rate_slo:
      name: "Deployment Error Rate SLO"
      description: "Percentage of requests returning server errors"
      query: |
        (
          sum(rate(http_requests_total{status_code=~"5.."}[5m])) /
          sum(rate(http_requests_total[5m]))
        ) * 100
      threshold: 5.0
      comparison: "less_than_or_equal"
      rationale: |
        Error rate should remain below 5% during deployments.
        Higher tolerance than production due to rolling update transitions.
    
    business_success_slo:
      name: "Business Operation Success SLO"
      description: "Percentage of successful business operations"
      query: |
        (
          sum(rate(business_operations_total{status="success"}[5m])) /
          sum(rate(business_operations_total[5m]))
        ) * 100
      threshold: 95.0
      comparison: "greater_than_or_equal"
      rationale: |
        Core business functionality should maintain 95% success rate.
        Business operations are critical for user experience.
    
    resource_utilization:
      name: "Resource Utilization Check"
      description: "CPU and memory utilization during deployment"
      cpu_query: |
        (
          sum(rate(container_cpu_usage_seconds_total{pod=~"sre-demo-app-.*"}[5m])) /
          sum(container_spec_cpu_quota{pod=~"sre-demo-app-.*"} / container_spec_cpu_period{pod=~"sre-demo-app-.*"})
        ) * 100
      memory_query: |
        (
          sum(container_memory_working_set_bytes{pod=~"sre-demo-app-.*"}) /
          sum(container_spec_memory_limit_bytes{pod=~"sre-demo-app-.*"})
        ) * 100
      cpu_threshold: 90.0
      memory_threshold: 90.0
      comparison: "less_than"
      rationale: |
        Resource utilization should not exceed 90% during deployments.
        High utilization can cause instability and performance issues.

  # Rollback trigger conditions
  rollback-conditions.yaml: |
    # Rollback Trigger Conditions
    # These conditions determine when automated rollback should be triggered
    
    critical_conditions:
      - name: "Service Unavailable"
        query: "up{job=\"sre-demo-app\"} == 0"
        duration: "2m"
        severity: "critical"
        action: "immediate_rollback"
        
      - name: "High Error Rate"
        query: |
          (
            sum(rate(http_requests_total{status_code=~"5.."}[5m])) /
            sum(rate(http_requests_total[5m]))
          ) * 100 > 10
        duration: "3m"
        severity: "critical"
        action: "immediate_rollback"
        
      - name: "Extreme Latency"
        query: |
          histogram_quantile(0.95, 
            sum(rate(http_request_duration_seconds_bucket[5m])) by (le)
          ) > 2.0
        duration: "5m"
        severity: "critical"
        action: "immediate_rollback"
    
    warning_conditions:
      - name: "Elevated Error Rate"
        query: |
          (
            sum(rate(http_requests_total{status_code=~"5.."}[5m])) /
            sum(rate(http_requests_total[5m]))
          ) * 100 > 5
        duration: "10m"
        severity: "warning"
        action: "investigation_required"
        
      - name: "High Latency"
        query: |
          histogram_quantile(0.95, 
            sum(rate(http_request_duration_seconds_bucket[5m])) by (le)
          ) > 0.8
        duration: "10m"
        severity: "warning"
        action: "investigation_required"
        
      - name: "Resource Exhaustion"
        query: |
          (
            sum(container_memory_working_set_bytes{pod=~"sre-demo-app-.*"}) /
            sum(container_spec_memory_limit_bytes{pod=~"sre-demo-app-.*"})
          ) * 100 > 95
        duration: "15m"
        severity: "warning"
        action: "scaling_recommended"

  # Deployment success criteria
  success-criteria.yaml: |
    # Deployment Success Criteria
    # All conditions must be met for deployment to be considered successful
    
    required_conditions:
      - name: "Pod Readiness"
        description: "All pods must be running and ready"
        check: "kubectl get pods -l app=sre-demo-app -o jsonpath='{.items[?(@.status.phase==\"Running\")].metadata.name}' | wc -w"
        expected: "equals_replica_count"
        
      - name: "Service Endpoints"
        description: "Service must have healthy endpoints"
        check: "kubectl get endpoints sre-demo-service -o jsonpath='{.subsets[*].addresses[*].ip}' | wc -w"
        expected: "greater_than_zero"
        
      - name: "Health Check Response"
        description: "Application health endpoint must respond successfully"
        check: "curl -f http://$EXTERNAL_IP/health"
        expected: "exit_code_zero"
        
      - name: "Metrics Availability"
        description: "Prometheus metrics must be available"
        check: "curl -f http://$EXTERNAL_IP/metrics"
        expected: "exit_code_zero"
    
    slo_validation_window: "5m"
    consecutive_success_required: 3
    validation_timeout: "600s"
    
  # Post-deployment monitoring
  post-deployment.yaml: |
    # Post-Deployment Monitoring Configuration
    # Extended monitoring after deployment completion
    
    monitoring_phases:
      immediate:
        duration: "5m"
        check_interval: "30s"
        slo_window: "2m"
        failure_tolerance: 0
        
      short_term:
        duration: "15m"
        check_interval: "60s"
        slo_window: "5m"
        failure_tolerance: 1
        
      stabilization:
        duration: "30m"
        check_interval: "300s"
        slo_window: "10m"
        failure_tolerance: 2
    
    escalation_policy:
      immediate_failures:
        action: "automatic_rollback"
        notification: "critical"
        
      repeated_failures:
        action: "manual_investigation"
        notification: "warning"
        
      trending_degradation:
        action: "performance_review"
        notification: "info"