name: Build and Push Container Image

on:
  push:
    branches: [ main ]
    paths: 
      - 'exercises/exercise2/**'
      - '.github/workflows/build-and-push.yml'
  pull_request:
    branches: [ main ]
    paths: 
      - 'exercises/exercise2/**'

env:
  REGISTRY: gcr.io
  IMAGE_NAME: sre-demo-app

jobs:
  test-application:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        cd exercises/exercise2
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Install testing and linting tools
      run: |
        pip install flake8 bandit pytest
        
    - name: Lint Python code
      run: |
        cd exercises/exercise2
        flake8 app/ --max-line-length=88 --ignore=E203,W503 --exclude=__pycache__
        
    - name: Run security analysis
      run: |
        cd exercises/exercise2
        bandit -r app/ -f json || true
        
    - name: Test application startup
      run: |
        cd exercises/exercise2
        timeout 10s python -m app.main || true

  build-and-push:
    needs: test-application
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}
        
    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v2
      
    - name: Configure Docker to use gcloud as credential helper
      run: gcloud auth configure-docker
      
    - name: Extract metadata for Docker
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ secrets.GCP_PROJECT_ID }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=sha,prefix={{branch}}-
          type=raw,value=latest,enable={{is_default_branch}}
          
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: exercises/exercise2
        file: exercises/exercise2/Dockerfile
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        platforms: linux/amd64
        
    - name: Install Trivy security scanner
      run: |
        sudo apt-get update
        sudo apt-get install wget apt-transport-https gnupg lsb-release
        wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
        echo "deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main" | sudo tee -a /etc/apt/sources.list.d/trivy.list
        sudo apt-get update
        sudo apt-get install trivy
        
    - name: Run Trivy vulnerability scanner
      run: |
        trivy image --exit-code 0 --severity HIGH,CRITICAL \
          ${{ env.REGISTRY }}/${{ secrets.GCP_PROJECT_ID }}/${{ env.IMAGE_NAME }}:latest
          
    - name: Display image information
      run: |
        echo "Container image successfully built and pushed:"
        echo "Registry: ${{ env.REGISTRY }}/${{ secrets.GCP_PROJECT_ID }}/${{ env.IMAGE_NAME }}"
        echo "Tags built: ${{ steps.meta.outputs.tags }}"
        echo ""
        echo "To pull this image:"
        echo "docker pull ${{ env.REGISTRY }}/${{ secrets.GCP_PROJECT_ID }}/${{ env.IMAGE_NAME }}:latest"